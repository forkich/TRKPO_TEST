name: Module and Integration tests

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Build with Maven
        run: mvn clean install -B
#  unit:
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Get repository code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'corretto'
#
#      - name: Unit_tests
#        run: mvn -f pom.xml test

  integration:
#    needs: unit
    runs-on: ubuntu-latest

#    defaults:
#      run:
#        working-directory: documents-app

    steps:
      - name: Get repository code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Maven
        run: mvn install

      - name: Integration_tests
        run: mvn -f pom.xml verify -Dtest=AccessRestIntegrationTestIT.java

#  cypress-run:
##    needs: integration
#    runs-on: ubuntu-latest
#
##    services:
##      backend:
##        image:
##        ports:
##          - 8080:8080
#
#    steps:
#      - name: Get repository code
#        uses: actions/checkout@v3
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: 18
#
#      - name: Install docker compose
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y docker-compose
#
#      - name: Build and Run Docker Compose
#        run: docker-compose up -d
#
##      - name: Wait for Backend Server to Start
##        run: sleep 10
#
#      - name: Install dependencies
#        working-directory: my-admin
#        run: |
#          npm install
#          npm start &
#
##      - name: start front
##        uses: cypress-io/github-action@v2
##        with:
##          start: npm start
##          wait-on: 'http://localhost:3000'
#
#      #      - name: start frontend server
##        uses: cypress-io/github-action@v2
##        with:
##          start: npm start # Запускает ваше приложение
##          wait-on: 'http://localhost:3000' # URL вашего приложения
##          wait-on-timeout: 60 # Время ожидания загрузки вашего приложения
#
#
#      - name: Install Cypress
#        run: npm install cypress
#
#      - name: cypress run
#        uses: cypress-io/github-action@v3
